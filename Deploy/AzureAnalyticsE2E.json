{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "18140380862840985876"
    }
  },
  "parameters": {
    "networkIsolationMode": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Network Isolation Mode"
      },
      "allowedValues": [
        "default",
        "vNet"
      ]
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource Location"
      }
    },
    "uniqueSuffix": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
      "metadata": {
        "description": "Unique Suffix"
      }
    },
    "ctrlDeployPurview": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployAI": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployStreaming": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployDataShare": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployPrivateDNSZones": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployOperationalDB": {
      "type": "bool",
      "defaultValue": false
    },
    "ctrlDeployCosmosDB": {
      "type": "bool",
      "defaultValue": false
    },
    "ctrlDeploySampleArtifacts": {
      "type": "bool",
      "defaultValue": false
    },
    "sampleArtifactCollectionName": {
      "type": "string",
      "defaultValue": "OpenDatasets",
      "allowedValues": [
        "OpenDatasets"
      ]
    },
    "ctrlNewOrExistingVNet": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "ctrlStreamIngestionService": {
      "type": "string",
      "defaultValue": "eventhub",
      "allowedValues": [
        "eventhub",
        "iothub"
      ]
    },
    "deploymentDatetime": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "existingVNetResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "[format('azvnet{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "vNetIPAddressPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.1.0.0/16"
      ],
      "metadata": {
        "description": "Virtual Network IP Address Space"
      }
    },
    "vNetSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Virtual Network Subnet Name"
      }
    },
    "vNetSubnetIPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Virtual Network Subnet Name"
      }
    },
    "workspaceDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azwksdatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "rawDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azrawdatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "curatedDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azcurateddatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "dataLakeRawZoneName": {
      "type": "string",
      "defaultValue": "raw",
      "metadata": {
        "description": "Data Lake Raw Zone Container Name"
      }
    },
    "dataLakeTrustedZoneName": {
      "type": "string",
      "defaultValue": "trusted",
      "metadata": {
        "description": "Data Lake Trusted Zone Container Name"
      }
    },
    "dataLakeCuratedZoneName": {
      "type": "string",
      "defaultValue": "curated",
      "metadata": {
        "description": "Data Lake Curated Zone Container Name"
      }
    },
    "dataLakeTransientZoneName": {
      "type": "string",
      "defaultValue": "transient",
      "metadata": {
        "description": "Data Lake Transient Zone Container Name"
      }
    },
    "dataLakeSandpitZoneName": {
      "type": "string",
      "defaultValue": "sandpit",
      "metadata": {
        "description": "Data Lake Sandpit Zone Container Name"
      }
    },
    "synapseDefaultContainerName": {
      "type": "string",
      "defaultValue": "[parameters('synapseWorkspaceName')]",
      "metadata": {
        "description": "Synapse Default Container Name"
      }
    },
    "synapseWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('azsynapsewks{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Name"
      }
    },
    "synapseSqlAdminUserName": {
      "type": "string",
      "defaultValue": "azsynapseadmin",
      "metadata": {
        "description": "SQL Admin User Name"
      }
    },
    "synapseSqlAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "SQL Admin User Password"
      }
    },
    "synapseManagedRGName": {
      "type": "string",
      "defaultValue": "[format('{0}-mrg', parameters('synapseWorkspaceName'))]",
      "metadata": {
        "description": "Synapse Managed Resource Group Name"
      }
    },
    "ctrlDeploySynapseSQLPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy SQL Pool"
      }
    },
    "synapseDedicatedSQLPoolName": {
      "type": "string",
      "defaultValue": "EnterpriseDW",
      "metadata": {
        "description": "SQL Pool Name"
      }
    },
    "synapseSQLPoolSKU": {
      "type": "string",
      "defaultValue": "DW100c",
      "metadata": {
        "description": "SQL Pool SKU"
      }
    },
    "ctrlDeploySynapseSparkPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Spark Pool"
      }
    },
    "synapseSparkPoolName": {
      "type": "string",
      "defaultValue": "SparkPool",
      "metadata": {
        "description": "Spark Pool Name"
      }
    },
    "synapseSparkPoolNodeSize": {
      "type": "string",
      "defaultValue": "Small",
      "metadata": {
        "description": "Spark Node Size"
      }
    },
    "synapseSparkPoolMinNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Spark Min Node Count"
      }
    },
    "synapseSparkPoolMaxNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Spark Max Node Count"
      }
    },
    "ctrlDeploySynapseADXPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy ADX Pool"
      }
    },
    "synapseADXPoolName": {
      "type": "string",
      "defaultValue": "[format('adxpool{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "ADX Pool Name"
      }
    },
    "synapseADXDatabaseName": {
      "type": "string",
      "defaultValue": "ADXDB",
      "metadata": {
        "description": "ADX Database Name"
      }
    },
    "synapseADXPoolEnableAutoScale": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "ADX Pool Enable Auto-Scale"
      }
    },
    "synapseADXPoolMinSize": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "ADX Pool Minimum Size"
      }
    },
    "synapseADXPoolMaxSize": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "ADX Pool Maximum Size"
      }
    },
    "synapsePrivateLinkHubName": {
      "type": "string",
      "defaultValue": "[format('azsynapsehub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Private Link Hub Name"
      }
    },
    "purviewAccountName": {
      "type": "string",
      "defaultValue": "[format('azpurview{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Purview Account Name"
      }
    },
    "purviewManagedRGName": {
      "type": "string",
      "defaultValue": "[format('{0}-mrg', parameters('purviewAccountName'))]",
      "metadata": {
        "description": "Purview Managed Resource Group Name"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('azkeyvault{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Data Lake Storage Account Name"
      }
    },
    "azureMLWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('azmlwks{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Workspace Name"
      }
    },
    "azureMLStorageAccountName": {
      "type": "string",
      "defaultValue": "[format('azmlstorage{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Storage Account Name"
      }
    },
    "azureMLAppInsightsName": {
      "type": "string",
      "defaultValue": "[format('azmlappinsights{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Application Insights Name"
      }
    },
    "azureMLContainerRegistryName": {
      "type": "string",
      "defaultValue": "[format('azmlcontainerreg{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Container Registry Name"
      }
    },
    "dataShareAccountName": {
      "type": "string",
      "defaultValue": "[format('azdatashare{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Data Share Name"
      }
    },
    "textAnalyticsAccountName": {
      "type": "string",
      "defaultValue": "[format('aztextanalytics{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Cognitive Services Account Name"
      }
    },
    "anomalyDetectorName": {
      "type": "string",
      "defaultValue": "[format('azanomalydetector{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Anomaly Detector Account Name"
      }
    },
    "eventHubNamespaceName": {
      "type": "string",
      "defaultValue": "[format('azeventhubns{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure EventHub Namespace Name"
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "[format('azeventhub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure EventHub Name"
      }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Azure EventHub SKU"
      }
    },
    "eventHubPartitionCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Azure EventHub Partition Count"
      }
    },
    "iotHubName": {
      "type": "string",
      "defaultValue": "[format('aziothub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure IoTHub Name"
      }
    },
    "iotHubSku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "Azure IoTHub SKU"
      }
    },
    "streamAnalyticsJobName": {
      "type": "string",
      "defaultValue": "[format('azstreamjob{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Stream Analytics Job Name"
      }
    },
    "streamAnalyticsJobSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Azure Stream Analytics Job Name"
      }
    },
    "cosmosDBAccountName": {
      "type": "string",
      "defaultValue": "[format('azcosmosdb{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "CosmosDB Account Name"
      }
    },
    "cosmosDBDatabaseName": {
      "type": "string",
      "defaultValue": "OperationalDB",
      "metadata": {
        "description": "CosmosDB Database Name"
      }
    }
  },
  "variables": {
    "deploymentScriptUAMIName": "[toLower(format('{0}-uami', resourceGroup().name))]",
    "rawDataLakeZoneContainerNames": [
      "[parameters('dataLakeTransientZoneName')]",
      "[parameters('dataLakeRawZoneName')]"
    ],
    "curatedDataLakeZoneContainerNames": [
      "[parameters('dataLakeTrustedZoneName')]",
      "[parameters('dataLakeCuratedZoneName')]"
    ],
    "synapsePSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9TeW5hcHNlUG9zdERlcGxveS5wczE=",
    "azMLWorkspaceName": "[if(parameters('ctrlDeployAI'), format('-AzMLWorkspaceName {0}', parameters('azureMLWorkspaceName')), '')]",
    "sampleArtifactsParams": "[if(parameters('ctrlDeploySampleArtifacts'), format('-CtrlDeploySampleArtifacts $True -SampleArtifactCollectioName {0}', parameters('sampleArtifactCollectionName')), '')]",
    "resourceNamesArray": [
      "[format('azvnet={0}', parameters('vNetName'))]",
      "[format('azsynapsewks={0}', parameters('synapseWorkspaceName'))]",
      "[format('azwksdatalake={0}', parameters('workspaceDataLakeAccountName'))]",
      "[format('azrawdatalake={0}', parameters('rawDataLakeAccountName'))]",
      "[format('azcurateddatalake={0}', parameters('curatedDataLakeAccountName'))]",
      "[format('azcosmosdbaccount={0}', parameters('cosmosDBAccountName'))]",
      "[format('azcosmosdbname={0}', parameters('cosmosDBDatabaseName'))]",
      "[format('azanomalydetector={0}', parameters('anomalyDetectorName'))]",
      "[format('aztextanalytics={0}', parameters('textAnalyticsAccountName'))]",
      "[format('azsynapsesqlpool={0}', parameters('synapseDedicatedSQLPoolName'))]",
      "[format('azsynapsesparkpool={0}', parameters('synapseSparkPoolName'))]",
      "[format('azsynapseadxpool={0}', parameters('synapseADXPoolName'))]",
      "[format('azsynapseadxdb={0}', parameters('synapseADXDatabaseName'))]",
      "[format('azsynapsehub={0}', parameters('synapsePrivateLinkHubName'))]",
      "[format('azpurview={0}', parameters('purviewAccountName'))]",
      "[format('azkeyvault={0}', parameters('keyVaultName'))]",
      "[format('azmlwks={0}', parameters('azureMLWorkspaceName'))]",
      "[format('azmlstorage={0}', parameters('azureMLStorageAccountName'))]",
      "[format('azmlappinsights={0}', parameters('azureMLAppInsightsName'))]",
      "[format('azmlcontainerreg={0}', parameters('azureMLContainerRegistryName'))]",
      "[format('azdatashare={0}', parameters('dataShareAccountName'))]",
      "[format('azeventhubns={0}', parameters('eventHubNamespaceName'))]",
      "[format('azeventhub={0}', parameters('eventHubName'))]",
      "[format('aziothub={0}', parameters('iotHubName'))]",
      "[format('azstreamjob={0}', parameters('streamAnalyticsJobName'))]"
    ],
    "resourceNamesCollectionParams": "[format('-ResourceNamesCollectionString \"{0}\"', join(variables('resourceNamesArray'), '`n'))]",
    "purviewPSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9QdXJ2aWV3UG9zdERlcGxveS5wczE=",
    "datalakeAccountPurviewParams": "[format('-WorkspaceDataLakeAccountName {0} -RawDataLakeAccountName {1} -CuratedDataLakeAccountName {2}', parameters('workspaceDataLakeAccountName'), parameters('rawDataLakeAccountName'), parameters('curatedDataLakeAccountName'))]",
    "cleanUpPSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9DbGVhblVwUG9zdERlcGxveS5wczE=",
    "cleanUpScriptArguments": "[format('-UAMIResourceID {0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('deploymentScriptUAMIName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PlatformServicesDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "deploymentScriptUAMIName": {
            "value": "[variables('deploymentScriptUAMIName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "ctrlNewOrExistingVNet": {
            "value": "[parameters('ctrlNewOrExistingVNet')]"
          },
          "existingVNetResourceGroupName": {
            "value": "[parameters('existingVNetResourceGroupName')]"
          },
          "vNetIPAddressPrefixes": {
            "value": "[parameters('vNetIPAddressPrefixes')]"
          },
          "vNetSubnetIPAddressPrefix": {
            "value": "[parameters('vNetSubnetIPAddressPrefix')]"
          },
          "vNetSubnetName": {
            "value": "[parameters('vNetSubnetName')]"
          },
          "vNetName": {
            "value": "[parameters('vNetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15601805655328323692"
            }
          },
          "parameters": {
            "resourceLocation": {
              "type": "string"
            },
            "networkIsolationMode": {
              "type": "string"
            },
            "existingVNetResourceGroupName": {
              "type": "string"
            },
            "ctrlNewOrExistingVNet": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "vNetSubnetName": {
              "type": "string"
            },
            "vNetIPAddressPrefixes": {
              "type": "array"
            },
            "vNetSubnetIPAddressPrefix": {
              "type": "string"
            },
            "deploymentScriptUAMIName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "variables": {
            "vNetID": "[if(equals(parameters('ctrlNewOrExistingVNet'), 'new'), resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName')), resourceId(subscription().subscriptionId, parameters('existingVNetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('vNetName')))]",
            "subnetID": "[if(equals(parameters('ctrlNewOrExistingVNet'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('vNetSubnetName')), format('{0}/subnets/{1}', variables('vNetID'), parameters('vNetSubnetName')))]"
          },
          "resources": [
            {
              "condition": "[and(equals(parameters('networkIsolationMode'), 'vNet'), equals(parameters('ctrlNewOrExistingVNet'), 'new'))]",
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[parameters('vNetName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('vNetIPAddressPrefixes')]"
                }
              }
            },
            {
              "condition": "[and(equals(parameters('networkIsolationMode'), 'vNet'), equals(parameters('ctrlNewOrExistingVNet'), 'new'))]",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', parameters('vNetName'), parameters('vNetSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('vNetSubnetIPAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('deploymentScriptUAMIName')]",
              "location": "[parameters('resourceLocation')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-04-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": true,
                "enableSoftDelete": true,
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "AzureServices"
                },
                "accessPolicies": []
              }
            }
          ],
          "outputs": {
            "keyVaultID": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            },
            "deploymentScriptUAMIID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('deploymentScriptUAMIName'))]"
            },
            "deploymentScriptUAMIName": {
              "type": "string",
              "value": "[parameters('deploymentScriptUAMIName')]"
            },
            "deploymentScriptUAMIPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('deploymentScriptUAMIName')), '2018-11-30').principalId]"
            },
            "vNetID": {
              "type": "string",
              "value": "[variables('vNetID')]"
            },
            "subnetID": {
              "type": "string",
              "value": "[variables('subnetID')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "SynapseDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "ctrlDeploySynapseSQLPool": {
            "value": "[parameters('ctrlDeploySynapseSQLPool')]"
          },
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "ctrlDeploySynapseSparkPool": {
            "value": "[parameters('ctrlDeploySynapseSparkPool')]"
          },
          "ctrlDeploySynapseADXPool": {
            "value": "[parameters('ctrlDeploySynapseADXPool')]"
          },
          "workspaceDataLakeAccountName": {
            "value": "[parameters('workspaceDataLakeAccountName')]"
          },
          "dataLakeSandpitZoneName": {
            "value": "[parameters('dataLakeSandpitZoneName')]"
          },
          "synapseDefaultContainerName": {
            "value": "[parameters('synapseDefaultContainerName')]"
          },
          "purviewAccountID": "[if(equals(parameters('ctrlDeployPurview'), true()), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAccountID.value), createObject('value', ''))]",
          "synapseDedicatedSQLPoolName": {
            "value": "[parameters('synapseDedicatedSQLPoolName')]"
          },
          "synapseManagedRGName": {
            "value": "[parameters('synapseManagedRGName')]"
          },
          "synapseSparkPoolMaxNodeCount": {
            "value": "[parameters('synapseSparkPoolMaxNodeCount')]"
          },
          "synapseSparkPoolMinNodeCount": {
            "value": "[parameters('synapseSparkPoolMinNodeCount')]"
          },
          "synapseSparkPoolName": {
            "value": "[parameters('synapseSparkPoolName')]"
          },
          "synapseSparkPoolNodeSize": {
            "value": "[parameters('synapseSparkPoolNodeSize')]"
          },
          "synapseADXPoolName": {
            "value": "[parameters('synapseADXPoolName')]"
          },
          "synapseADXDatabaseName": {
            "value": "[parameters('synapseADXDatabaseName')]"
          },
          "synapseADXPoolMinSize": {
            "value": "[parameters('synapseADXPoolMinSize')]"
          },
          "synapseADXPoolMaxSize": {
            "value": "[parameters('synapseADXPoolMaxSize')]"
          },
          "synapseADXPoolEnableAutoScale": {
            "value": "[parameters('synapseADXPoolEnableAutoScale')]"
          },
          "synapseSqlAdminPassword": {
            "value": "[parameters('synapseSqlAdminPassword')]"
          },
          "synapseSqlAdminUserName": {
            "value": "[parameters('synapseSqlAdminUserName')]"
          },
          "synapseSQLPoolSKU": {
            "value": "[parameters('synapseSQLPoolSKU')]"
          },
          "synapseWorkspaceName": {
            "value": "[parameters('synapseWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "14496928848539355507"
            }
          },
          "parameters": {
            "networkIsolationMode": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "ctrlDeploySynapseSQLPool": {
              "type": "bool"
            },
            "ctrlDeploySynapseSparkPool": {
              "type": "bool"
            },
            "ctrlDeploySynapseADXPool": {
              "type": "bool"
            },
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "workspaceDataLakeAccountName": {
              "type": "string"
            },
            "dataLakeSandpitZoneName": {
              "type": "string"
            },
            "synapseDefaultContainerName": {
              "type": "string"
            },
            "synapseWorkspaceName": {
              "type": "string"
            },
            "synapseSqlAdminUserName": {
              "type": "string"
            },
            "synapseSqlAdminPassword": {
              "type": "string"
            },
            "synapseManagedRGName": {
              "type": "string"
            },
            "synapseDedicatedSQLPoolName": {
              "type": "string"
            },
            "synapseSQLPoolSKU": {
              "type": "string"
            },
            "synapseSparkPoolName": {
              "type": "string"
            },
            "synapseSparkPoolNodeSize": {
              "type": "string"
            },
            "synapseSparkPoolMinNodeCount": {
              "type": "int"
            },
            "synapseSparkPoolMaxNodeCount": {
              "type": "int"
            },
            "synapseADXPoolName": {
              "type": "string"
            },
            "synapseADXDatabaseName": {
              "type": "string"
            },
            "synapseADXPoolEnableAutoScale": {
              "type": "bool"
            },
            "synapseADXPoolMinSize": {
              "type": "int"
            },
            "synapseADXPoolMaxSize": {
              "type": "int"
            },
            "purviewAccountID": {
              "type": "string"
            }
          },
          "variables": {
            "storageEnvironmentDNS": "[environment().suffixes.storage]",
            "dataLakeStorageAccountUrl": "[format('https://{0}.dfs.{1}', parameters('workspaceDataLakeAccountName'), variables('storageEnvironmentDNS'))]",
            "azureRBACStorageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
            "privateContainerNames": [
              "[parameters('dataLakeSandpitZoneName')]",
              "[parameters('synapseDefaultContainerName')]"
            ]
          },
          "resources": [
            {
              "condition": "[equals(parameters('ctrlDeploySynapseADXPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/kustoPools/databases",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'), parameters('synapseADXDatabaseName'))]",
              "kind": "ReadWrite",
              "location": "[parameters('resourceLocation')]",
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/kustoPools', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseSQLPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/sqlPools",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseDedicatedSQLPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[parameters('synapseSQLPoolSKU')]"
              },
              "properties": {
                "createMode": "Default",
                "collation": "SQL_Latin1_General_CP1_CI_AS"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('networkIsolationMode'), 'default')]",
              "type": "Microsoft.Synapse/workspaces/firewallRules",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'AllowAllNetworks')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces/firewallRules",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'default')]",
              "properties": {
                "grantSqlControlToManagedIdentity": {
                  "desiredState": "Enabled"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseSparkPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/bigDataPools",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseSparkPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "autoPause": {
                  "enabled": true,
                  "delayInMinutes": 15
                },
                "nodeSize": "[parameters('synapseSparkPoolNodeSize')]",
                "nodeSizeFamily": "MemoryOptimized",
                "sparkVersion": "2.4",
                "autoScale": {
                  "enabled": true,
                  "minNodeCount": "[parameters('synapseSparkPoolMinNodeCount')]",
                  "maxNodeCount": "[parameters('synapseSparkPoolMaxNodeCount')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseADXPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/kustoPools",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "capacity": 2,
                "name": "Compute optimized",
                "size": "Extra small"
              },
              "properties": {
                "enablePurge": false,
                "workspaceUID": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01').workspaceUID]",
                "enableStreamingIngest": false,
                "optimizedAutoscale": {
                  "isEnabled": "[parameters('synapseADXPoolEnableAutoScale')]",
                  "maximum": "[parameters('synapseADXPoolMaxSize')]",
                  "minimum": "[parameters('synapseADXPoolMinSize')]",
                  "version": 1
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('workspaceDataLakeAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "None",
                  "resourceAccessRules": [
                    {
                      "tenantId": "[subscription().tenantId]",
                      "resourceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
                    }
                  ]
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "copy": {
                "name": "r_dataLakePrivateContainer",
                "count": "[length(variables('privateContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/default/{1}', parameters('workspaceDataLakeAccountName'), variables('privateContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('synapseWorkspaceName')]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "defaultDataLakeStorage": {
                  "accountUrl": "[variables('dataLakeStorageAccountUrl')]",
                  "filesystem": "[parameters('synapseDefaultContainerName')]"
                },
                "sqlAdministratorLogin": "[parameters('synapseSqlAdminUserName')]",
                "sqlAdministratorLoginPassword": "[parameters('synapseSqlAdminPassword')]",
                "managedResourceGroupName": "[parameters('synapseManagedRGName')]",
                "managedVirtualNetwork": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'default', '')]",
                "managedVirtualNetworkSettings": "[if(equals(parameters('networkIsolationMode'), 'vNet'), createObject('preventDataExfiltration', true()), null())]",
                "purviewConfiguration": "[if(equals(parameters('ctrlDeployPurview'), true()), createObject('purviewResourceId', parameters('purviewAccountID')), null())]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('workspaceDataLakeAccountName'))]",
              "name": "[guid(parameters('synapseWorkspaceName'), parameters('workspaceDataLakeAccountName'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "workspaceDataLakeAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
            },
            "workspaceDataLakeAccountName": {
              "type": "string",
              "value": "[parameters('workspaceDataLakeAccountName')]"
            },
            "synapseWorkspaceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
            },
            "synapseWorkspaceName": {
              "type": "string",
              "value": "[parameters('synapseWorkspaceName')]"
            },
            "synapseSQLDedicatedEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01').connectivityEndpoints.sql]"
            },
            "synapseSQLServerlessEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01').connectivityEndpoints.sqlOnDemand]"
            },
            "synapseWorkspaceSparkID": {
              "type": "string",
              "value": "[if(parameters('ctrlDeploySynapseSparkPool'), resourceId('Microsoft.Synapse/workspaces/bigDataPools', parameters('synapseWorkspaceName'), parameters('synapseSparkPoolName')), '')]"
            },
            "synapseWorkspaceSparkName": {
              "type": "string",
              "value": "[if(parameters('ctrlDeploySynapseSparkPool'), parameters('synapseSparkPoolName'), '')]"
            },
            "synapseWorkspaceIdentityPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]"
      ]
    },
    {
      "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PurviewDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "purviewAccountName": {
            "value": "[parameters('purviewAccountName')]"
          },
          "purviewManagedRGName": {
            "value": "[parameters('purviewManagedRGName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "14004961329902305840"
            }
          },
          "parameters": {
            "resourceLocation": {
              "type": "string"
            },
            "purviewAccountName": {
              "type": "string"
            },
            "purviewManagedRGName": {
              "type": "string"
            }
          },
          "variables": {
            "azureRBACReaderRoleID": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
          },
          "resources": [
            {
              "type": "Microsoft.Purview/accounts",
              "apiVersion": "2020-12-01-preview",
              "name": "[parameters('purviewAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": "Enabled",
                "managedResourceGroupName": "[parameters('purviewManagedRGName')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceGroup().name, parameters('purviewAccountName'), 'Reader')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACReaderRoleID'))]",
                "principalId": "[reference(resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName')), '2020-12-01-preview', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "purviewAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName'))]"
            },
            "purviewAccountName": {
              "type": "string",
              "value": "[parameters('purviewAccountName')]"
            },
            "purviewIdentityPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName')), '2020-12-01-preview', 'full').identity.principalId]"
            },
            "purviewScanEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName')), '2020-12-01-preview').endpoints.scan]"
            },
            "purviewAPIVersion": {
              "type": "string",
              "value": "2020-12-01-preview"
            },
            "purviewManagedStorageAccountID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName')), '2020-12-01-preview').managedResources.storageAccount]"
            },
            "purviewManagedEventHubNamespaceID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Purview/accounts', parameters('purviewAccountName')), '2020-12-01-preview').managedResources.eventHubNamespace]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AIServicesDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "anomalyDetectorAccountName": {
            "value": "[parameters('anomalyDetectorName')]"
          },
          "azureMLAppInsightsName": {
            "value": "[parameters('azureMLAppInsightsName')]"
          },
          "azureMLContainerRegistryName": {
            "value": "[parameters('azureMLContainerRegistryName')]"
          },
          "azureMLStorageAccountName": {
            "value": "[parameters('azureMLStorageAccountName')]"
          },
          "azureMLWorkspaceName": {
            "value": "[parameters('azureMLWorkspaceName')]"
          },
          "textAnalyticsAccountName": {
            "value": "[parameters('textAnalyticsAccountName')]"
          },
          "keyVaultID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultID.value]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "4316534712246430741"
            }
          },
          "parameters": {
            "networkIsolationMode": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "azureMLStorageAccountName": {
              "type": "string"
            },
            "azureMLAppInsightsName": {
              "type": "string"
            },
            "azureMLContainerRegistryName": {
              "type": "string"
            },
            "keyVaultID": {
              "type": "string"
            },
            "textAnalyticsAccountName": {
              "type": "string"
            },
            "anomalyDetectorAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2017-04-18",
              "name": "[parameters('textAnalyticsAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "TextAnalytics",
              "sku": {
                "name": "S"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Disabled', 'Enabled')]",
                "customSubDomainName": "[parameters('textAnalyticsAccountName')]"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2017-04-18",
              "name": "[parameters('anomalyDetectorAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AnomalyDetector",
              "sku": {
                "name": "S0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Disabled', 'Enabled')]",
                "customSubDomainName": "[parameters('anomalyDetectorAccountName')]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('azureMLStorageAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "AzureServices"
                },
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('azureMLAppInsightsName')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-08-01-preview",
              "name": "[parameters('azureMLContainerRegistryName')]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Premium', 'Basic')]"
              },
              "properties": {
                "networkRuleBypassOptions": "AzureServices",
                "publicNetworkAccess": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Disabled', 'Enabled')]",
                "networkRuleSet": "[if(equals(parameters('networkIsolationMode'), 'vNet'), createObject('defaultAction', 'Deny'), null())]"
              }
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2021-04-01",
              "name": "[parameters('azureMLWorkspaceName')]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('azureMLWorkspaceName')]",
                "keyVault": "[parameters('keyVaultID')]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]",
                "allowPublicAccessWhenBehindVnet": "[if(equals(parameters('networkIsolationMode'), 'vNet'), false(), true())]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "textAnalyticsAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('textAnalyticsAccountName'))]"
            },
            "textAnalyticsAccountName": {
              "type": "string",
              "value": "[parameters('textAnalyticsAccountName')]"
            },
            "textAnalyticsEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('textAnalyticsAccountName')), '2017-04-18').endpoint]"
            },
            "anomalyDetectorAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('anomalyDetectorAccountName'))]"
            },
            "anomalyDetectorAccountName": {
              "type": "string",
              "value": "[parameters('anomalyDetectorAccountName')]"
            },
            "anomalyDetectorEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('anomalyDetectorAccountName')), '2017-04-18').endpoint]"
            },
            "azureMLWorkspaceIdentityPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('azureMLWorkspaceName')), '2021-04-01', 'full').identity.principalId]"
            },
            "azureMLWorkspaceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('azureMLWorkspaceName'))]"
            },
            "azureMLWorkspaceName": {
              "type": "string",
              "value": "[parameters('azureMLWorkspaceName')]"
            },
            "containerRegistryID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]"
            },
            "containerRegistryName": {
              "type": "string",
              "value": "[parameters('azureMLContainerRegistryName')]"
            },
            "applicationInsightsID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[parameters('azureMLAppInsightsName')]"
            },
            "storageAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('azureMLStorageAccountName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]"
      ]
    },
    {
      "condition": "[equals(parameters('ctrlDeployDataShare'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DataShareDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dataShareAccountName": {
            "value": "[parameters('dataShareAccountName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "purviewCatalogUri": "[if(parameters('ctrlDeployPurview'), createObject('value', format('{0}.catalog.purview.azure.com', parameters('purviewAccountName'))), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15540359189999614405"
            }
          },
          "parameters": {
            "dataShareAccountName": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "purviewCatalogUri": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DataShare/accounts",
              "apiVersion": "2020-09-01",
              "name": "[parameters('dataShareAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "catalogUri": "[parameters('purviewCatalogUri')]"
              }
            }
          ],
          "outputs": {
            "dataShareAccountName": {
              "type": "string",
              "value": "[parameters('dataShareAccountName')]"
            },
            "dataShareAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.DataShare/accounts', parameters('dataShareAccountName'))]"
            },
            "dataShareAccountPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DataShare/accounts', parameters('dataShareAccountName')), '2020-09-01', 'full').identity.principalId]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('ctrlDeployStreaming'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "StreamingServicesDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ctrlStreamIngestionService": {
            "value": "[parameters('ctrlStreamIngestionService')]"
          },
          "eventHubNamespaceName": {
            "value": "[parameters('eventHubNamespaceName')]"
          },
          "eventHubSku": {
            "value": "[parameters('eventHubSku')]"
          },
          "iotHubName": {
            "value": "[parameters('iotHubName')]"
          },
          "iotHubSku": {
            "value": "[parameters('iotHubSku')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "streamAnalyticsJobName": {
            "value": "[parameters('streamAnalyticsJobName')]"
          },
          "streamAnalyticsJobSku": {
            "value": "[parameters('streamAnalyticsJobSku')]"
          },
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "subNetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.subnetID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15976307686854386345"
            }
          },
          "parameters": {
            "networkIsolationMode": {
              "type": "string"
            },
            "subNetID": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "eventHubNamespaceName": {
              "type": "string"
            },
            "eventHubSku": {
              "type": "string"
            },
            "iotHubName": {
              "type": "string"
            },
            "iotHubSku": {
              "type": "string",
              "defaultValue": "F1"
            },
            "streamAnalyticsJobName": {
              "type": "string"
            },
            "streamAnalyticsJobSku": {
              "type": "string"
            },
            "ctrlStreamIngestionService": {
              "type": "string",
              "defaultValue": "eventhub",
              "allowedValues": [
                "eventhub",
                "iothub"
              ]
            }
          },
          "variables": {
            "azureEventHubsDataOwnerRABCRoleID": "f526a384-b230-433a-b45c-95f59c4a2dec",
            "azureIoTHubDataReaderRBACRoleID": "b447c946-2db7-41ec-983d-d8bf3b1c77e3"
          },
          "resources": [
            {
              "condition": "[and(equals(parameters('ctrlStreamIngestionService'), 'eventhub'), equals(parameters('networkIsolationMode'), 'vNet'))]",
              "type": "Microsoft.EventHub/namespaces/networkRuleSets",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('eventHubNamespaceName'), 'default')]",
              "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Deny",
                "virtualNetworkRules": [
                  {
                    "subnet": {
                      "id": "[parameters('subNetID')]"
                    },
                    "ignoreMissingVnetServiceEndpoint": true
                  }
                ],
                "trustedServiceAccessEnabled": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlStreamIngestionService'), 'eventhub')]",
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2021-11-01",
              "name": "[parameters('eventHubNamespaceName')]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[parameters('eventHubSku')]",
                "tier": "[parameters('eventHubSku')]",
                "capacity": 1
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "condition": "[equals(parameters('ctrlStreamIngestionService'), 'iothub')]",
              "type": "Microsoft.Devices/IotHubs",
              "apiVersion": "2021-07-01",
              "name": "[parameters('iotHubName')]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[parameters('iotHubSku')]",
                "capacity": 1
              },
              "properties": {
                "publicNetworkAccess": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Disabled', 'Enabled')]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.StreamAnalytics/streamingjobs",
              "apiVersion": "2020-03-01",
              "name": "[parameters('streamAnalyticsJobName')]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "[parameters('streamAnalyticsJobSku')]"
                },
                "jobType": "Cloud"
              }
            },
            {
              "condition": "[equals(parameters('ctrlStreamIngestionService'), 'eventhub')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.EventHub/namespaces/{0}', parameters('eventHubNamespaceName'))]",
              "name": "[guid(parameters('eventHubNamespaceName'), parameters('streamAnalyticsJobName'), 'Event Hubs Data Receiver')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureEventHubsDataOwnerRABCRoleID'))]",
                "principalId": "[if(equals(parameters('ctrlStreamIngestionService'), 'eventhub'), reference(resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName')), '2020-03-01', 'full').identity.principalId, '')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlStreamIngestionService'), 'iothub')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Devices/IotHubs/{0}', parameters('iotHubName'))]",
              "name": "[guid(parameters('iotHubName'), parameters('streamAnalyticsJobName'), 'IoT Hub Data Receiver')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureIoTHubDataReaderRBACRoleID'))]",
                "principalId": "[if(equals(parameters('ctrlStreamIngestionService'), 'iothub'), reference(resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName')), '2020-03-01', 'full').identity.principalId, '')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
              ]
            }
          ],
          "outputs": {
            "streamAnalyticsIdentityPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName')), '2020-03-01', 'full').identity.principalId]"
            },
            "streamAnalyticsJobID": {
              "type": "string",
              "value": "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
            },
            "streamAnalyticsJobName": {
              "type": "string",
              "value": "[parameters('streamAnalyticsJobName')]"
            },
            "iotHubName": {
              "type": "string",
              "value": "[if(equals(parameters('ctrlStreamIngestionService'), 'iothub'), parameters('iotHubName'), '')]"
            },
            "iotHubID": {
              "type": "string",
              "value": "[if(equals(parameters('ctrlStreamIngestionService'), 'iothub'), resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '')]"
            },
            "iotHubPrincipalID": {
              "type": "string",
              "value": "[if(equals(parameters('ctrlStreamIngestionService'), 'iothub'), reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-01', 'full').identity.principalId, '')]"
            },
            "eventHubNamespaceName": {
              "type": "string",
              "value": "[if(equals(parameters('ctrlStreamIngestionService'), 'eventhub'), parameters('eventHubNamespaceName'), '')]"
            },
            "eventHubNamespaceID": {
              "type": "string",
              "value": "[if(equals(parameters('ctrlStreamIngestionService'), 'eventhub'), resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName')), '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DataLakeDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "curatedDataLakeAccountName": {
            "value": "[parameters('curatedDataLakeAccountName')]"
          },
          "curatedDataLakeZoneContainerNames": {
            "value": "[variables('curatedDataLakeZoneContainerNames')]"
          },
          "rawDataLakeZoneContainerNames": {
            "value": "[variables('rawDataLakeZoneContainerNames')]"
          },
          "dataShareResourceID": "[if(parameters('ctrlDeployDataShare'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'DataShareDeploy'), '2022-09-01').outputs.dataShareAccountID.value), createObject('value', ''))]",
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "purviewAccountResourceID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAccountID.value), createObject('value', ''))]",
          "rawDataLakeAccountName": {
            "value": "[parameters('rawDataLakeAccountName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "streamAnalyticsJobResourceID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.streamAnalyticsJobID.value), createObject('value', ''))]",
          "synapseWorkspaceResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceID.value]"
          },
          "azureMLWorkspaceResourceID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.azureMLWorkspaceID.value), createObject('value', ''))]",
          "anomalyDetectorAccountResourceID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.anomalyDetectorAccountID.value), createObject('value', ''))]",
          "languageServiceAccountResourceID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.textAnalyticsAccountID.value), createObject('value', ''))]",
          "ctrlDeployStreaming": {
            "value": "[parameters('ctrlDeployStreaming')]"
          },
          "ctrlStreamIngestionService": {
            "value": "[parameters('ctrlStreamIngestionService')]"
          },
          "iotHubResourceID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.iotHubID.value), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15304076180209324833"
            }
          },
          "parameters": {
            "networkIsolationMode": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "rawDataLakeAccountName": {
              "type": "string"
            },
            "curatedDataLakeAccountName": {
              "type": "string"
            },
            "rawDataLakeZoneContainerNames": {
              "type": "array"
            },
            "curatedDataLakeZoneContainerNames": {
              "type": "array"
            },
            "synapseWorkspaceResourceID": {
              "type": "string"
            },
            "dataShareResourceID": {
              "type": "string"
            },
            "streamAnalyticsJobResourceID": {
              "type": "string"
            },
            "purviewAccountResourceID": {
              "type": "string"
            },
            "azureMLWorkspaceResourceID": {
              "type": "string"
            },
            "anomalyDetectorAccountResourceID": {
              "type": "string"
            },
            "languageServiceAccountResourceID": {
              "type": "string"
            },
            "iotHubResourceID": {
              "type": "string"
            },
            "ctrlDeployStreaming": {
              "type": "bool"
            },
            "ctrlStreamIngestionService": {
              "type": "string",
              "defaultValue": "eventhub",
              "allowedValues": [
                "eventhub",
                "iothub"
              ]
            }
          },
          "variables": {
            "synapseAccessRule": "[if(equals(parameters('synapseWorkspaceResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('synapseWorkspaceResourceID'))))]",
            "dataShareAccessRule": "[if(equals(parameters('dataShareResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('dataShareResourceID'))))]",
            "streamAnalyticsJobAccessRule": "[if(equals(parameters('streamAnalyticsJobResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('streamAnalyticsJobResourceID'))))]",
            "purviewAccessRule": "[if(equals(parameters('purviewAccountResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('purviewAccountResourceID'))))]",
            "azureMLAccessRule": "[if(equals(parameters('azureMLWorkspaceResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('azureMLWorkspaceResourceID'))))]",
            "anomalyDetectorAccessRule": "[if(equals(parameters('anomalyDetectorAccountResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('anomalyDetectorAccountResourceID'))))]",
            "languageServiceAccessRule": "[if(equals(parameters('languageServiceAccountResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('languageServiceAccountResourceID'))))]",
            "iotHubAccessRule": "[if(equals(parameters('iotHubResourceID'), ''), createArray(), createArray(createObject('tenantId', subscription().tenantId, 'resourceId', parameters('iotHubResourceID'))))]",
            "dataLakeresourceAccessRules": "[union(variables('synapseAccessRule'), variables('dataShareAccessRule'), variables('streamAnalyticsJobAccessRule'), variables('purviewAccessRule'), variables('azureMLAccessRule'), variables('anomalyDetectorAccessRule'), variables('languageServiceAccessRule'), variables('iotHubAccessRule'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('rawDataLakeAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "[if(and(parameters('ctrlDeployStreaming'), equals(parameters('ctrlStreamIngestionService'), 'eventhub')), 'AzureServices', 'None')]",
                  "resourceAccessRules": "[variables('dataLakeresourceAccessRules')]"
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_GRS"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('curatedDataLakeAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "[if(and(parameters('ctrlDeployStreaming'), equals(parameters('ctrlStreamIngestionService'), 'eventhub')), 'AzureServices', 'None')]",
                  "resourceAccessRules": "[variables('dataLakeresourceAccessRules')]"
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_GRS"
              }
            },
            {
              "copy": {
                "name": "r_rawDataLakeZoneContainer",
                "count": "[length(parameters('rawDataLakeZoneContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/default/{1}', parameters('rawDataLakeAccountName'), parameters('rawDataLakeZoneContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('rawDataLakeAccountName'))]"
              ]
            },
            {
              "copy": {
                "name": "r_curatedDataLakeZoneContainer",
                "count": "[length(parameters('curatedDataLakeZoneContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/default/{1}', parameters('curatedDataLakeAccountName'), parameters('curatedDataLakeZoneContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('curatedDataLakeAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "rawDataLakeStorageAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('rawDataLakeAccountName'))]"
            },
            "rawDataLakeStorageAccountName": {
              "type": "string",
              "value": "[parameters('rawDataLakeAccountName')]"
            },
            "curatedDataLakeStorageAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('curatedDataLakeAccountName'))]"
            },
            "curatedDataLakeStorageAccountName": {
              "type": "string",
              "value": "[parameters('curatedDataLakeAccountName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataShareDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"
      ]
    },
    {
      "condition": "[parameters('ctrlDeployOperationalDB')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "OperationalDatabasesDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "cosmosDBAccountName": {
            "value": "[parameters('cosmosDBAccountName')]"
          },
          "cosmosDBDatabaseName": {
            "value": "[parameters('cosmosDBDatabaseName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "ctrlDeployCosmosDB": {
            "value": "[parameters('ctrlDeployCosmosDB')]"
          },
          "synapseWorkspaceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "10951079542699497107"
            }
          },
          "parameters": {
            "resourceLocation": {
              "type": "string"
            },
            "networkIsolationMode": {
              "type": "string"
            },
            "synapseWorkspaceID": {
              "type": "string"
            },
            "ctrlDeployCosmosDB": {
              "type": "bool",
              "defaultValue": true
            },
            "cosmosDBAccountName": {
              "type": "string"
            },
            "cosmosDBDatabaseName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}', parameters('cosmosDBAccountName'), parameters('cosmosDBDatabaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('cosmosDBDatabaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2021-10-15",
              "name": "[parameters('cosmosDBAccountName')]",
              "kind": "GlobalDocumentDB",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                  {
                    "failoverPriority": 0,
                    "locationName": "[parameters('resourceLocation')]"
                  }
                ],
                "backupPolicy": {
                  "type": "Periodic",
                  "periodicModeProperties": {
                    "backupIntervalInMinutes": 240,
                    "backupRetentionIntervalInHours": 8,
                    "backupStorageRedundancy": "Local"
                  }
                },
                "networkAclBypass": "AzureServices",
                "networkAclBypassResourceIds": [
                  "[parameters('synapseWorkspaceID')]"
                ],
                "enableAnalyticalStorage": true,
                "publicNetworkAccess": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Disabled', 'Enabled')]",
                "analyticalStorageConfiguration": {
                  "schemaType": "WellDefined"
                },
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "cosmosDBAccountID": {
              "type": "string",
              "value": "[if(parameters('ctrlDeployCosmosDB'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName')), '')]"
            },
            "cosmosDBAccountName": {
              "type": "string",
              "value": "[if(parameters('ctrlDeployCosmosDB'), parameters('cosmosDBAccountName'), '')]"
            },
            "cosmosDBDatabaseName": {
              "type": "string",
              "value": "[if(parameters('ctrlDeployCosmosDB'), parameters('cosmosDBDatabaseName'), '')]"
            },
            "cosmosDBAccountEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName')), '2021-10-15').documentEndpoint]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ServiceConnectionsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "ctrlDeployAI": {
            "value": "[parameters('ctrlDeployAI')]"
          },
          "ctrlDeployStreaming": {
            "value": "[parameters('ctrlDeployStreaming')]"
          },
          "ctrlStreamIngestionService": {
            "value": "[parameters('ctrlStreamIngestionService')]"
          },
          "ctrlSynapseDeploySparkPool": {
            "value": "[parameters('ctrlDeploySynapseSparkPool')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "purviewIdentityPrincipalID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewIdentityPrincipalID.value), createObject('value', ''))]",
          "synapseWorkspaceIdentityPrincipalID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceIdentityPrincipalID.value]"
          },
          "azureMLWorkspaceName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.azureMLWorkspaceName.value), createObject('value', parameters('azureMLWorkspaceName')))]",
          "curatedDataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.curatedDataLakeStorageAccountName.value]"
          },
          "rawDataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.rawDataLakeStorageAccountName.value]"
          },
          "curatedDataLakeZoneContainerNames": {
            "value": "[variables('curatedDataLakeZoneContainerNames')]"
          },
          "rawDataLakeZoneContainerNames": {
            "value": "[variables('rawDataLakeZoneContainerNames')]"
          },
          "eventHubName": {
            "value": "[parameters('eventHubName')]"
          },
          "eventHubNamespaceName": {
            "value": "[parameters('eventHubNamespaceName')]"
          },
          "eventHubPartitionCount": {
            "value": "[parameters('eventHubPartitionCount')]"
          },
          "rawDataLakeAccountID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.rawDataLakeStorageAccountID.value]"
          },
          "anomalyDetectorAccountName": {
            "value": "[parameters('anomalyDetectorName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "synapseWorkspaceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceID.value]"
          },
          "synapseWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceName.value]"
          },
          "synapseSparkPoolID": "[if(parameters('ctrlDeploySynapseSparkPool'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceSparkID.value), createObject('value', ''))]",
          "synapseSparkPoolName": "[if(parameters('ctrlDeploySynapseSparkPool'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceSparkName.value), createObject('value', parameters('synapseSparkPoolName')))]",
          "textAnalyticsAccountName": {
            "value": "[parameters('textAnalyticsAccountName')]"
          },
          "uamiPrincipalID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.deploymentScriptUAMIPrincipalID.value]"
          },
          "cosmosDBAccountName": "[if(parameters('ctrlDeployCosmosDB'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBAccountName.value), createObject('value', ''))]",
          "ctrlDeployCosmosDB": {
            "value": "[parameters('ctrlDeployCosmosDB')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "12271059858040583127"
            }
          },
          "parameters": {
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "ctrlDeployStreaming": {
              "type": "bool"
            },
            "ctrlDeployAI": {
              "type": "bool"
            },
            "ctrlSynapseDeploySparkPool": {
              "type": "bool"
            },
            "ctrlStreamIngestionService": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "uamiPrincipalID": {
              "type": "string"
            },
            "purviewIdentityPrincipalID": {
              "type": "string"
            },
            "synapseWorkspaceIdentityPrincipalID": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "rawDataLakeAccountName": {
              "type": "string"
            },
            "rawDataLakeAccountID": {
              "type": "string"
            },
            "curatedDataLakeAccountName": {
              "type": "string"
            },
            "rawDataLakeZoneContainerNames": {
              "type": "array"
            },
            "curatedDataLakeZoneContainerNames": {
              "type": "array"
            },
            "eventHubNamespaceName": {
              "type": "string"
            },
            "eventHubName": {
              "type": "string"
            },
            "eventHubPartitionCount": {
              "type": "int"
            },
            "textAnalyticsAccountName": {
              "type": "string"
            },
            "anomalyDetectorAccountName": {
              "type": "string"
            },
            "synapseSparkPoolID": {
              "type": "string"
            },
            "synapseSparkPoolName": {
              "type": "string"
            },
            "synapseWorkspaceID": {
              "type": "string"
            },
            "synapseWorkspaceName": {
              "type": "string"
            },
            "ctrlDeployCosmosDB": {
              "type": "bool"
            },
            "cosmosDBAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "storageEnvironmentDNS": "[environment().suffixes.storage]"
          },
          "resources": [
            {
              "type": "Microsoft.Synapse/workspaces/administrators",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'activeDirectory')]",
              "properties": {
                "administratorType": "ActiveDirectory",
                "tenantId": "[subscription().tenantId]",
                "sid": "[parameters('uamiPrincipalID')]"
              }
            },
            {
              "copy": {
                "name": "r_azureMLRawDataLakeStores",
                "count": "[length(parameters('rawDataLakeZoneContainerNames'))]"
              },
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.MachineLearningServices/workspaces/datastores",
              "apiVersion": "2021-03-01-preview",
              "name": "[format('{0}/{1}', parameters('azureMLWorkspaceName'), format('{0}_{1}', parameters('rawDataLakeAccountName'), parameters('rawDataLakeZoneContainerNames')[copyIndex()]))]",
              "properties": {
                "contents": {
                  "contentsType": "AzureDataLakeGen2",
                  "accountName": "[parameters('rawDataLakeAccountName')]",
                  "containerName": "[parameters('rawDataLakeZoneContainerNames')[copyIndex()]]",
                  "credentials": {
                    "credentialsType": "None"
                  },
                  "endpoint": "[variables('storageEnvironmentDNS')]",
                  "protocol": "https"
                }
              }
            },
            {
              "copy": {
                "name": "r_azureMLCuratedDataLakeStores",
                "count": "[length(parameters('curatedDataLakeZoneContainerNames'))]"
              },
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.MachineLearningServices/workspaces/datastores",
              "apiVersion": "2021-03-01-preview",
              "name": "[format('{0}/{1}', parameters('azureMLWorkspaceName'), format('{0}_{1}', parameters('curatedDataLakeAccountName'), parameters('curatedDataLakeZoneContainerNames')[copyIndex()]))]",
              "properties": {
                "contents": {
                  "contentsType": "AzureDataLakeGen2",
                  "accountName": "[parameters('curatedDataLakeAccountName')]",
                  "containerName": "[parameters('curatedDataLakeZoneContainerNames')[copyIndex()]]",
                  "credentials": {
                    "credentialsType": "None"
                  },
                  "endpoint": "[variables('storageEnvironmentDNS')]",
                  "protocol": "https"
                }
              }
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamIngestionService'), 'eventhub'))]",
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('eventHubNamespaceName'), parameters('eventHubName'))]",
              "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": "[parameters('eventHubPartitionCount')]",
                "captureDescription": {
                  "enabled": true,
                  "skipEmptyArchives": true,
                  "encoding": "Avro",
                  "intervalInSeconds": 300,
                  "sizeLimitInBytes": 314572800,
                  "destination": {
                    "name": "EventHubArchive.AzureBlockBlob",
                    "properties": {
                      "storageAccountResourceId": "[parameters('rawDataLakeAccountID')]",
                      "blobContainer": "raw",
                      "archiveNameFormat": "{Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-Key', parameters('textAnalyticsAccountName')))]",
              "properties": {
                "value": "[if(parameters('ctrlDeployAI'), listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('textAnalyticsAccountName')), '2021-10-01').key1, '')]"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-Key', parameters('anomalyDetectorAccountName')))]",
              "properties": {
                "value": "[if(parameters('ctrlDeployAI'), listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('anomalyDetectorAccountName')), '2021-10-01').key1, '')]"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-Key', parameters('cosmosDBAccountName')))]",
              "properties": {
                "value": "[if(parameters('ctrlDeployCosmosDB'), listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName')), '2021-11-15-preview').connectionStrings[0].connectionString, '')]"
              }
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployAI'), true()), equals(parameters('ctrlSynapseDeploySparkPool'), true()))]",
              "type": "Microsoft.MachineLearningServices/workspaces/computes",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('synapseSparkPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "computeType": "SynapseSpark",
                "resourceId": "[if(parameters('ctrlSynapseDeploySparkPool'), parameters('synapseSparkPoolID'), '')]"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.MachineLearningServices/workspaces/linkedServices",
              "apiVersion": "2020-09-01-preview",
              "name": "[format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('synapseWorkspaceName'))]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "linkedServiceResourceId": "[parameters('synapseWorkspaceID')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "KeyVaultSynapseAccessPolicy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "synapseWorkspaceIdentityPrincipalID": {
                    "value": "[parameters('synapseWorkspaceIdentityPrincipalID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "14605331485508675217"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "synapseWorkspaceIdentityPrincipalID": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('synapseWorkspaceIdentityPrincipalID')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": {
                              "secrets": [
                                "get",
                                "list"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "KeyVaultPurviewAccessPolicy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "purviewIdentityPrincipalID": {
                    "value": "[parameters('purviewIdentityPrincipalID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "145000183412340692"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "purviewIdentityPrincipalID": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('purviewIdentityPrincipalID')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": {
                              "secrets": [
                                "get",
                                "list"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'KeyVaultSynapseAccessPolicy')]"
              ]
            }
          ],
          "outputs": {
            "azureMLSynapseLinkedServicePrincipalID": {
              "type": "string",
              "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.MachineLearningServices/workspaces/linkedServices', parameters('azureMLWorkspaceName'), parameters('synapseWorkspaceName')), '2020-09-01-preview', 'full').identity.principalId, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "RBACRoleAssignmentDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ctrlDeployDataShare": {
            "value": "[parameters('ctrlDeployDataShare')]"
          },
          "dataShareAccountPrincipalID": "[if(parameters('ctrlDeployDataShare'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'DataShareDeploy'), '2022-09-01').outputs.dataShareAccountPrincipalID.value), createObject('value', ''))]",
          "ctrlDeployStreaming": {
            "value": "[parameters('ctrlDeployStreaming')]"
          },
          "streamAnalyticsIdentityPrincipalID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.streamAnalyticsIdentityPrincipalID.value), createObject('value', ''))]",
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "purviewIdentityPrincipalID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewIdentityPrincipalID.value), createObject('value', ''))]",
          "ctrlDeployAI": {
            "value": "[parameters('ctrlDeployAI')]"
          },
          "azureMLWorkspaceName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.azureMLWorkspaceName.value), createObject('value', ''))]",
          "azureMLSynapseLinkedServicePrincipalID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'ServiceConnectionsDeploy'), '2022-09-01').outputs.azureMLSynapseLinkedServicePrincipalID.value), createObject('value', ''))]",
          "curatedDataLakeAccountName": {
            "value": "[parameters('curatedDataLakeAccountName')]"
          },
          "rawDataLakeAccountName": {
            "value": "[parameters('rawDataLakeAccountName')]"
          },
          "synapseWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceName.value]"
          },
          "synapseWorkspaceIdentityPrincipalID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceIdentityPrincipalID.value]"
          },
          "UAMIPrincipalID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.deploymentScriptUAMIPrincipalID.value]"
          },
          "iotHubPrincipalID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.iotHubPrincipalID.value), createObject('value', ''))]",
          "ctrlStreamingIngestionService": {
            "value": "[parameters('ctrlStreamIngestionService')]"
          },
          "purviewAccountName": {
            "value": "[parameters('purviewAccountName')]"
          },
          "ctrlDeployOperationalDB": {
            "value": "[parameters('ctrlDeployOperationalDB')]"
          },
          "ctrlDeployCosmosDB": {
            "value": "[parameters('ctrlDeployCosmosDB')]"
          },
          "cosmosDBAccountName": {
            "value": "[parameters('cosmosDBAccountName')]"
          },
          "cosmosDBDatabaseName": {
            "value": "[parameters('cosmosDBDatabaseName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "17902946549877838925"
            }
          },
          "parameters": {
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "ctrlDeployAI": {
              "type": "bool"
            },
            "ctrlDeployDataShare": {
              "type": "bool"
            },
            "ctrlDeployStreaming": {
              "type": "bool"
            },
            "ctrlDeployOperationalDB": {
              "type": "bool"
            },
            "ctrlDeployCosmosDB": {
              "type": "bool"
            },
            "rawDataLakeAccountName": {
              "type": "string"
            },
            "curatedDataLakeAccountName": {
              "type": "string"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "purviewAccountName": {
              "type": "string"
            },
            "synapseWorkspaceName": {
              "type": "string"
            },
            "synapseWorkspaceIdentityPrincipalID": {
              "type": "string"
            },
            "azureMLSynapseLinkedServicePrincipalID": {
              "type": "string"
            },
            "purviewIdentityPrincipalID": {
              "type": "string"
            },
            "UAMIPrincipalID": {
              "type": "string"
            },
            "dataShareAccountPrincipalID": {
              "type": "string"
            },
            "streamAnalyticsIdentityPrincipalID": {
              "type": "string"
            },
            "ctrlStreamingIngestionService": {
              "type": "string"
            },
            "iotHubPrincipalID": {
              "type": "string"
            },
            "cosmosDBAccountName": {
              "type": "string"
            },
            "cosmosDBDatabaseName": {
              "type": "string"
            }
          },
          "variables": {
            "azureRBACStorageBlobDataReaderRoleID": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
            "azureRBACStorageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
            "azureRBACContributorRoleID": "b24988ac-6180-42a0-ab88-20f7382dd24c",
            "azureRBACOwnerRoleID": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "azureRBACReaderRoleID": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "cosmosDBDataContributorRoleID": "00000000-0000-0000-0000-000000000002"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Synapse/workspaces/{0}', parameters('synapseWorkspaceName'))]",
              "name": "[guid('cbe28037-09a6-4b35-a751-8dfd3f03f59d', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACOwnerRoleID'))]",
                "principalId": "[parameters('UAMIPrincipalID')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid('3f2019ca-ce91-4153-920a-19e6dae191a8', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployPurview'), parameters('purviewIdentityPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid('139d07dd-a26c-4b29-9619-8f70ea215795', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACOwnerRoleID'))]",
                "principalId": "[parameters('UAMIPrincipalID')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.MachineLearningServices/workspaces/{0}', parameters('azureMLWorkspaceName'))]",
              "name": "[guid('dfe59492-dd91-45d5-804a-ebf18e820dcc', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACContributorRoleID'))]",
                "principalId": "[parameters('synapseWorkspaceIdentityPrincipalID')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('rawDataLakeAccountName'))]",
              "name": "[guid('be61ada6-1a00-47ff-8027-81b1b6c7b82a', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployAI'), parameters('azureMLSynapseLinkedServicePrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('curatedDataLakeAccountName'))]",
              "name": "[guid('57116cd9-7bcb-402c-8739-97a8b4c6afad', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployAI'), parameters('azureMLSynapseLinkedServicePrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployDataShare'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('rawDataLakeAccountName'))]",
              "name": "[guid('bbcbc4e3-e2bb-4cde-97c8-02636e6f1632', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployDataShare'), parameters('dataShareAccountPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployDataShare'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('curatedDataLakeAccountName'))]",
              "name": "[guid('d0d58921-3185-483b-892f-bbae0210fee9', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployDataShare'), parameters('dataShareAccountPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployStreaming'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('rawDataLakeAccountName'))]",
              "name": "[guid('5411c956-6918-4e05-b23b-a8260d63799c', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployStreaming'), parameters('streamAnalyticsIdentityPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployStreaming'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('curatedDataLakeAccountName'))]",
              "name": "[guid('a4c67752-b33e-492c-a62f-1514dd1f8364', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployStreaming'), parameters('streamAnalyticsIdentityPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamingIngestionService'), 'iothub'))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('rawDataLakeAccountName'))]",
              "name": "[guid('67c87aaa-7c65-4ca0-96bd-cc5ae82bd2f4', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[if(and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamingIngestionService'), 'iothub')), parameters('iotHubPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamingIngestionService'), 'iothub'))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('curatedDataLakeAccountName'))]",
              "name": "[guid('f1f3d703-c621-448f-a658-ce53ddbd81b0', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[if(and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamingIngestionService'), 'iothub')), parameters('iotHubPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('rawDataLakeAccountName'))]",
              "name": "[guid('a1fb98aa-4c53-4a4d-951f-3ac730a27a5b', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[parameters('synapseWorkspaceIdentityPrincipalID')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('curatedDataLakeAccountName'))]",
              "name": "[guid('4354d861-488d-4395-b018-2cc2baa9e491', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[parameters('synapseWorkspaceIdentityPrincipalID')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Synapse/workspaces/{0}', parameters('synapseWorkspaceName'))]",
              "name": "[guid('f4191dd4-2d87-47c0-9f38-d3d24cc13f5c', subscription().subscriptionId, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACReaderRoleID'))]",
                "principalId": "[if(parameters('ctrlDeployPurview'), parameters('purviewIdentityPrincipalID'), '')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[and(parameters('ctrlDeployOperationalDB'), parameters('ctrlDeployCosmosDB'))]",
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}', parameters('cosmosDBAccountName'), guid('d9b6b1c6-7e97-4693-b58a-5d1a567d413f', subscription().subscriptionId, resourceGroup().id))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[format('{0}/sqlRoleDefinitions/{1}', if(parameters('ctrlDeployCosmosDB'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName')), ''), variables('cosmosDBDataContributorRoleID'))]",
                "scope": "[format('{0}/dbs/{1}', if(parameters('ctrlDeployCosmosDB'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName')), ''), parameters('cosmosDBDatabaseName'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataShareDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'ServiceConnectionsDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"
      ]
    },
    {
      "condition": "[equals(parameters('networkIsolationMode'), 'vNet')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "VirtualNetworkIntegration",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ctrlDeployAI": {
            "value": "[parameters('ctrlDeployAI')]"
          },
          "ctrlDeployPrivateDNSZones": {
            "value": "[parameters('ctrlDeployPrivateDNSZones')]"
          },
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "ctrlDeployStreaming": {
            "value": "[parameters('ctrlDeployStreaming')]"
          },
          "ctrlStreamIngestionService": {
            "value": "[parameters('ctrlStreamIngestionService')]"
          },
          "vNetName": {
            "value": "[parameters('vNetName')]"
          },
          "subnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.subnetID.value]"
          },
          "vNetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.vNetID.value]"
          },
          "anomalyDetectorAccountID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.anomalyDetectorAccountID.value), createObject('value', ''))]",
          "anomalyDetectorAccountName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.anomalyDetectorAccountName.value), createObject('value', ''))]",
          "azureMLContainerRegistryID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.containerRegistryID.value), createObject('value', ''))]",
          "azureMLContainerRegistryName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.containerRegistryName.value), createObject('value', ''))]",
          "azureMLStorageAccountID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.storageAccountID.value), createObject('value', ''))]",
          "azureMLStorageAccountName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.storageAccountName.value), createObject('value', ''))]",
          "azureMLWorkspaceID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.azureMLWorkspaceID.value), createObject('value', ''))]",
          "azureMLWorkspaceName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.azureMLWorkspaceName.value), createObject('value', ''))]",
          "curatedDataLakeAccountID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.curatedDataLakeStorageAccountID.value]"
          },
          "curatedDataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.curatedDataLakeStorageAccountName.value]"
          },
          "eventHubNamespaceID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.eventHubNamespaceID.value), createObject('value', ''))]",
          "eventHubNamespaceName": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.eventHubNamespaceName.value), createObject('value', ''))]",
          "iotHubID": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.iotHubID.value), createObject('value', ''))]",
          "iotHubName": "[if(parameters('ctrlDeployStreaming'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy'), '2022-09-01').outputs.iotHubName.value), createObject('value', ''))]",
          "keyVaultID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultID.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "purviewAccountID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAccountID.value), createObject('value', ''))]",
          "purviewAccountName": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAccountName.value), createObject('value', ''))]",
          "purviewManagedEventHubNamespaceID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewManagedEventHubNamespaceID.value), createObject('value', ''))]",
          "purviewManagedStorageAccountID": "[if(parameters('ctrlDeployPurview'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewManagedStorageAccountID.value), createObject('value', ''))]",
          "rawDataLakeAccountID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.rawDataLakeStorageAccountID.value]"
          },
          "rawDataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.rawDataLakeStorageAccountName.value]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "synapsePrivateLinkHubName": {
            "value": "[parameters('synapsePrivateLinkHubName')]"
          },
          "synapseWorkspaceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceID.value]"
          },
          "synapseWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceName.value]"
          },
          "textAnalyticsAccountID": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.textAnalyticsAccountID.value), createObject('value', ''))]",
          "textAnalyticsAccountName": "[if(parameters('ctrlDeployAI'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.textAnalyticsAccountName.value), createObject('value', ''))]",
          "workspaceDataLakeAccountID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.workspaceDataLakeAccountID.value]"
          },
          "workspaceDataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.workspaceDataLakeAccountName.value]"
          },
          "cosmosDBAccountID": "[if(and(parameters('ctrlDeployOperationalDB'), parameters('ctrlDeployCosmosDB')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBAccountID.value), createObject('value', ''))]",
          "cosmosDBAccountName": "[if(and(parameters('ctrlDeployOperationalDB'), parameters('ctrlDeployCosmosDB')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBAccountName.value), createObject('value', ''))]",
          "ctrlDeployCosmosDB": {
            "value": "[parameters('ctrlDeployCosmosDB')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "7638738576960218536"
            }
          },
          "parameters": {
            "vNetID": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "subnetID": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "ctrlDeployPrivateDNSZones": {
              "type": "bool"
            },
            "ctrlDeployAI": {
              "type": "bool"
            },
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "ctrlDeployStreaming": {
              "type": "bool"
            },
            "ctrlDeployCosmosDB": {
              "type": "bool"
            },
            "ctrlStreamIngestionService": {
              "type": "string"
            },
            "keyVaultID": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "synapseWorkspaceID": {
              "type": "string"
            },
            "synapseWorkspaceName": {
              "type": "string"
            },
            "synapsePrivateLinkHubName": {
              "type": "string"
            },
            "workspaceDataLakeAccountID": {
              "type": "string"
            },
            "workspaceDataLakeAccountName": {
              "type": "string"
            },
            "rawDataLakeAccountID": {
              "type": "string"
            },
            "rawDataLakeAccountName": {
              "type": "string"
            },
            "curatedDataLakeAccountID": {
              "type": "string"
            },
            "curatedDataLakeAccountName": {
              "type": "string"
            },
            "purviewAccountID": {
              "type": "string"
            },
            "purviewAccountName": {
              "type": "string"
            },
            "purviewManagedStorageAccountID": {
              "type": "string"
            },
            "purviewManagedEventHubNamespaceID": {
              "type": "string"
            },
            "eventHubNamespaceID": {
              "type": "string"
            },
            "eventHubNamespaceName": {
              "type": "string"
            },
            "iotHubID": {
              "type": "string"
            },
            "iotHubName": {
              "type": "string"
            },
            "textAnalyticsAccountID": {
              "type": "string"
            },
            "textAnalyticsAccountName": {
              "type": "string"
            },
            "anomalyDetectorAccountID": {
              "type": "string"
            },
            "anomalyDetectorAccountName": {
              "type": "string"
            },
            "azureMLStorageAccountID": {
              "type": "string"
            },
            "azureMLStorageAccountName": {
              "type": "string"
            },
            "azureMLContainerRegistryID": {
              "type": "string"
            },
            "azureMLContainerRegistryName": {
              "type": "string"
            },
            "azureMLWorkspaceID": {
              "type": "string"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "cosmosDBAccountID": {
              "type": "string"
            },
            "cosmosDBAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "storageEnvironmentDNS": "[environment().suffixes.storage]"
          },
          "resources": [
            {
              "type": "Microsoft.Synapse/privateLinkHubs",
              "apiVersion": "2021-03-01",
              "name": "[parameters('synapsePrivateLinkHubName')]",
              "location": "[parameters('resourceLocation')]"
            },
            {
              "condition": "[equals(parameters('ctrlDeployPrivateDNSZones'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "DeployPrivateDNSZones",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vNetID": {
                    "value": "[parameters('vNetID')]"
                  },
                  "vNetName": {
                    "value": "[parameters('vNetName')]"
                  },
                  "ctrlDeployAI": {
                    "value": "[parameters('ctrlDeployAI')]"
                  },
                  "ctrlDeployPurview": {
                    "value": "[parameters('ctrlDeployPurview')]"
                  },
                  "ctrlDeployStreaming": {
                    "value": "[parameters('ctrlDeployStreaming')]"
                  },
                  "ctrlDeployCosmosDB": {
                    "value": "[parameters('ctrlDeployCosmosDB')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "3728597098829688783"
                    }
                  },
                  "parameters": {
                    "vNetID": {
                      "type": "string"
                    },
                    "vNetName": {
                      "type": "string"
                    },
                    "ctrlDeployPurview": {
                      "type": "bool"
                    },
                    "ctrlDeployAI": {
                      "type": "bool"
                    },
                    "ctrlDeployStreaming": {
                      "type": "bool"
                    },
                    "ctrlDeployCosmosDB": {
                      "type": "bool"
                    }
                  },
                  "variables": {
                    "environmentStorageDNS": "[environment().suffixes.storage]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneStorageDFS",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "[format('privatelink.dfs.{0}', variables('environmentStorageDNS'))]"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[or(equals(parameters('ctrlDeployPurview'), true()), equals(parameters('ctrlDeployAI'), true()))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneStorageBlob",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "[format('privatelink.blob.{0}', variables('environmentStorageDNS'))]"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneStorageQueue",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "[format('privatelink.queue.{0}', variables('environmentStorageDNS'))]"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneStorageFile",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "[format('privatelink.file.{0}', variables('environmentStorageDNS'))]"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneSynapseSQL",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.sql.azuresynapse.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneSynapseDev",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.dev.azuresynapse.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneSynapseWeb",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.azuresynapse.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneKeyVault",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.vaultcore.azure.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[or(equals(parameters('ctrlDeployPurview'), true()), equals(parameters('ctrlDeployStreaming'), true()))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZonePurviewServiceBus",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.servicebus.windows.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZonePurviewAccount",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.purview.azure.com"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZonePurviewPortal",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.purviewstudio.azure.com"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneContainerRegistry",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.azurecr.io"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneAzureMLAPI",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.api.azureml.ms"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneAzureMLNotebook",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.notebooks.azure.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployStreaming'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneIoTHub",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.azure-devices.net"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployAI'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneCognitiveService",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.cognitiveservices.azure.com"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneCosmosDBSQL",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.documents.azure.com"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PrivateDNSZoneCosmosDBAnalytics",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dnsZoneName": {
                            "value": "privatelink.analytics.cosmos.azure.com"
                          },
                          "vNetID": {
                            "value": "[parameters('vNetID')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "10301139593076346084"
                            }
                          },
                          "parameters": {
                            "dnsZoneName": {
                              "type": "string"
                            },
                            "vNetName": {
                              "type": "string"
                            },
                            "vNetID": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('{0}-{1}', parameters('dnsZoneName'), parameters('vNetName')))]",
                              "location": "global",
                              "properties": {
                                "virtualNetwork": {
                                  "id": "[parameters('vNetID')]"
                                },
                                "registrationEnabled": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('dnsZoneName')]",
                              "location": "global"
                            }
                          ],
                          "outputs": {
                            "dnsZoneID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "storageDFSPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneStorageDFS'), '2022-09-01').outputs.dnsZoneID.value]"
                    },
                    "storageBlobPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(or(equals(parameters('ctrlDeployPurview'), true()), equals(parameters('ctrlDeployAI'), true())), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneStorageBlob'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "storageQueuePrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployPurview'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneStorageQueue'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "storageFilePrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneStorageFile'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "synapseSQLPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneSynapseSQL'), '2022-09-01').outputs.dnsZoneID.value]"
                    },
                    "synapseDevPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneSynapseDev'), '2022-09-01').outputs.dnsZoneID.value]"
                    },
                    "synapseWebPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneSynapseWeb'), '2022-09-01').outputs.dnsZoneID.value]"
                    },
                    "keyVaultPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneKeyVault'), '2022-09-01').outputs.dnsZoneID.value]"
                    },
                    "serviceBusPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(or(equals(parameters('ctrlDeployPurview'), true()), equals(parameters('ctrlDeployStreaming'), true())), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZonePurviewServiceBus'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "purviewAccountPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployPurview'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZonePurviewAccount'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "acrPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneContainerRegistry'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "azureMLAPIPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneAzureMLAPI'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "azureMLNotebooksPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneAzureMLNotebook'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "iotHubPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployStreaming'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneIoTHub'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "cognitiveServicePrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployAI'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneCognitiveService'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "cosmosDBSQLPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployCosmosDB'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneCosmosDBSQL'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    },
                    "cosmosDBAnalyticsPrivateDNSZoneID": {
                      "type": "string",
                      "value": "[if(parameters('ctrlDeployCosmosDB'), reference(resourceId('Microsoft.Resources/deployments', 'PrivateDNSZoneCosmosDBAnalytics'), '2022-09-01').outputs.dnsZoneID.value, '')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "SynapseSQLPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "Sql"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-sql', parameters('synapseWorkspaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('synapseWorkspaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-sql-azuresynapse-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.sql.azuresynapse.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "SynapseSQLServerlessPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "SqlOnDemand"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-sqlserverless', parameters('synapseWorkspaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('synapseWorkspaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-sql-azuresynapse-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.sql.azuresynapse.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "SynapseDevPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "Dev"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-dev', parameters('synapseWorkspaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('synapseWorkspaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-web-azuresynapse-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.dev.azuresynapse.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "SynapseWebPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "Web"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-web', parameters('synapseWorkspaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[resourceId('Microsoft.Synapse/privateLinkHubs', parameters('synapsePrivateLinkHubName'))]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-dev-azuresynapse-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azuresynapse.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]",
                "[resourceId('Microsoft.Synapse/privateLinkHubs', parameters('synapsePrivateLinkHubName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "KeyVaultPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "vault"
                  },
                  "privateEndpoitName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('keyVaultID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-vaultcore-azure-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "WorkspaceDataLakeDFSPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "dfs"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-dfs', parameters('workspaceDataLakeAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('workspaceDataLakeAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-dfs-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "RawDataLakePrivateLinkDFS",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "dfs"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-dfs', parameters('rawDataLakeAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('rawDataLakeAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-dfs-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "CuratedDataLakePrivateLinkDFS",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "dfs"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-dfs', parameters('curatedDataLakeAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('curatedDataLakeAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-dfs-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PurviewBlobPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "blob"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-blob', parameters('purviewAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('purviewManagedStorageAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-blob-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PurviewQueuePrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "queue"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-queue', parameters('purviewAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('purviewManagedStorageAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-queue-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PurviewEventHubPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "namespace"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-namespace', parameters('purviewAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('purviewManagedEventHubNamespaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-servicebus-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PurviewAccountPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "account"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-account', parameters('purviewAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('purviewAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-purview-azure-com-account",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.purview.azure.com')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PurviewPortalPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "portal"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-portal', parameters('purviewAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('purviewAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-purview-azure-com-portal",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.purviewstudio.azure.com')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamIngestionService'), 'eventhub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "EventHubPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "namespace"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-namespace', parameters('eventHubNamespaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('eventHubNamespaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-servicebus-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[and(equals(parameters('ctrlDeployStreaming'), true()), equals(parameters('ctrlStreamIngestionService'), 'iothub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "IoTHubPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "iotHub"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-iotHub', parameters('iotHubName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('iotHubID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-azure-devices-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azure-devices.net')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "TextAnalyticsPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "account"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-account', parameters('textAnalyticsAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('textAnalyticsAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-cognitiveservices-azure-com",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.cognitiveservices.azure.com')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AnomalyDetectorPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "account"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-account', parameters('anomalyDetectorAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('anomalyDetectorAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-cognitiveservices-azure-com",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.cognitiveservices.azure.com')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AzMLStorageAccountBlobPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "blob"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-blob', parameters('azureMLStorageAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('azureMLStorageAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-blob-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AzMLStorageAccountFilePrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "file"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-file', parameters('azureMLStorageAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('azureMLStorageAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-file-core-windows-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', variables('storageEnvironmentDNS')))]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployCosmosDB'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "CosmosDBSQLPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "Sql"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-sql', parameters('cosmosDBAccountName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('cosmosDBAccountID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-documents-azure-com",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AzureMLContainerRegistryPrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "registry"
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-registry', parameters('azureMLContainerRegistryName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('azureMLContainerRegistryID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-azurecr-io",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeployAI'), true())]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AzureMLWorkspacePrivateLink",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupID": {
                    "value": "amlworkspace"
                  },
                  "privateDNSZoneConfigs": {
                    "value": [
                      {
                        "name": "privatelink-api-azureml-ms",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]"
                        }
                      },
                      {
                        "name": "privatelink-notebooks-azure-net",
                        "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.notebooks.azure.net')]"
                        }
                      }
                    ]
                  },
                  "privateEndpoitName": {
                    "value": "[format('{0}-amlworkspace', parameters('azureMLWorkspaceName'))]"
                  },
                  "privateLinkServiceId": {
                    "value": "[parameters('azureMLWorkspaceID')]"
                  },
                  "resourceLocation": {
                    "value": "[parameters('resourceLocation')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "deployDNSZoneGroup": {
                    "value": "[parameters('ctrlDeployPrivateDNSZones')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7600604797238794563"
                    }
                  },
                  "parameters": {
                    "privateEndpoitName": {
                      "type": "string"
                    },
                    "resourceLocation": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "deployDNSZoneGroup": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDNSZoneConfigs": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployDNSZoneGroup')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpoitName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": "[parameters('privateDNSZoneConfigs')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoitName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[parameters('privateEndpoitName')]",
                      "location": "[parameters('resourceLocation')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetID')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpoitName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('groupID')]"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DeployPrivateDNSZones')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'StreamingServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PostDeploymentScript",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cleanUpPSScriptLocation": {
            "value": "[variables('cleanUpPSScriptLocation')]"
          },
          "cleanUpScriptArguments": {
            "value": "[variables('cleanUpScriptArguments')]"
          },
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "deploymentDatetime": {
            "value": "[parameters('deploymentDatetime')]"
          },
          "deploymentScriptUAMIId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.deploymentScriptUAMIID.value]"
          },
          "purviewPSScriptLocation": {
            "value": "[variables('purviewPSScriptLocation')]"
          },
          "purviewScriptArguments": {
            "value": "[format('-PurviewAccountID {0} -PurviewAccountName {1} -SubscriptionID {2} -ResourceGroupName {3} -UAMIIdentityID {4} -ScanEndpoint {5} -APIVersion {6} -SynapseWorkspaceName {7} -SynapseWorkspaceIdentityID {8} -KeyVaultName {9} -KeyVaultID {10} {11} {12} -NetworkIsolationMode {13}', if(parameters('ctrlDeployPurview'), reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAccountID.value, ''), parameters('purviewAccountName'), subscription().subscriptionId, resourceGroup().name, reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.deploymentScriptUAMIPrincipalID.value, if(parameters('ctrlDeployPurview'), reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewScanEndpoint.value, ''), if(parameters('ctrlDeployPurview'), reference(resourceId('Microsoft.Resources/deployments', 'PurviewDeploy'), '2022-09-01').outputs.purviewAPIVersion.value, ''), reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceName.value, reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceIdentityPrincipalID.value, parameters('keyVaultName'), reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultID.value, variables('datalakeAccountPurviewParams'), if(parameters('ctrlDeployDataShare'), format('-DataShareIdentityID {0}', reference(resourceId('Microsoft.Resources/deployments', 'DataShareDeploy'), '2022-09-01').outputs.dataShareAccountPrincipalID.value), ''), parameters('networkIsolationMode'))]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "synapsePSScriptLocation": {
            "value": "[variables('synapsePSScriptLocation')]"
          },
          "synapseScriptArguments": {
            "value": "[join(createArray(format('-NetworkIsolationMode {0}', parameters('networkIsolationMode')), format('-ctrlDeployAI ${0}', parameters('ctrlDeployAI')), format('-SubscriptionID {0}', subscription().subscriptionId), format('-ResourceGroupName {0}', resourceGroup().name), format('-ResourceGroupLocation {0}', resourceGroup().location), format('-UAMIIdentityID {0}', reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.deploymentScriptUAMIPrincipalID.value), format('-KeyVaultName {0}', parameters('keyVaultName')), format('-KeyVaultID {0}', reference(resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy'), '2022-09-01').outputs.keyVaultID.value), format('{0}', format('-SynapseWorkspaceName {0} -SynapseWorkspaceID {1}', parameters('synapseWorkspaceName'), reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.synapseWorkspaceID.value)), format('{0}', if(parameters('ctrlDeployAI'), format('-AzMLSynapseLinkedServiceIdentityID {0}', reference(resourceId('Microsoft.Resources/deployments', 'ServiceConnectionsDeploy'), '2022-09-01').outputs.azureMLSynapseLinkedServicePrincipalID.value), '')), format('{0}', format('-WorkspaceDataLakeAccountName {0} -WorkspaceDataLakeAccountID {1} -RawDataLakeAccountName {2} -RawDataLakeAccountID {3} -CuratedDataLakeAccountName {4} -CuratedDataLakeAccountID {5}', parameters('workspaceDataLakeAccountName'), reference(resourceId('Microsoft.Resources/deployments', 'SynapseDeploy'), '2022-09-01').outputs.workspaceDataLakeAccountID.value, parameters('rawDataLakeAccountName'), reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.rawDataLakeStorageAccountID.value, parameters('curatedDataLakeAccountName'), reference(resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy'), '2022-09-01').outputs.curatedDataLakeStorageAccountID.value)), format('{0}', variables('azMLWorkspaceName')), format('{0}', if(parameters('ctrlDeployAI'), format('-TextAnalyticsAccountID {0} -TextAnalyticsAccountName {1} -TextAnalyticsEndpoint {2}', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.textAnalyticsAccountID.value, parameters('textAnalyticsAccountName'), reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.textAnalyticsEndpoint.value), '')), format('{0}', if(parameters('ctrlDeployAI'), format('-AnomalyDetectorAccountID {0} -AnomalyDetectorAccountName {1} -AnomalyDetectorEndpoint {2}', reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.anomalyDetectorAccountID.value, parameters('anomalyDetectorName'), reference(resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy'), '2022-09-01').outputs.anomalyDetectorEndpoint.value), '')), format('{0}', if(parameters('ctrlDeployCosmosDB'), format('-CtrlDeployCosmosDB ${0} -CosmosDBAccountID {1} -CosmosDBAccountName {2} -CosmosDBDatabaseName {3}', parameters('ctrlDeployCosmosDB'), reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBAccountID.value, reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBAccountName.value, reference(resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy'), '2022-09-01').outputs.cosmosDBDatabaseName.value), '')), format('{0}', variables('sampleArtifactsParams'))), ' ')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "9419473248721905584"
            }
          },
          "parameters": {
            "deploymentDatetime": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "deploymentScriptUAMIId": {
              "type": "string"
            },
            "synapseScriptArguments": {
              "type": "string"
            },
            "synapsePSScriptLocation": {
              "type": "string"
            },
            "purviewScriptArguments": {
              "type": "string"
            },
            "purviewPSScriptLocation": {
              "type": "string"
            },
            "cleanUpScriptArguments": {
              "type": "string"
            },
            "cleanUpPSScriptLocation": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('SynapsePostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('synapseScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('synapsePSScriptLocation'))]"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('PurviewPostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('purviewScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('purviewPSScriptLocation'))]"
              }
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('CleanUpPostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('cleanUpScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('cleanUpPSScriptLocation'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', format('PurviewPostDeploymentScript-{0}', parameters('deploymentDatetime')))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', format('SynapsePostDeploymentScript-{0}', parameters('deploymentDatetime')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AIServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataLakeDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'DataShareDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'OperationalDatabasesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PlatformServicesDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'RBACRoleAssignmentDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'ServiceConnectionsDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkIntegration')]"
      ]
    }
  ]
}